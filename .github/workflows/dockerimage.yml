name: Docker Image CI

on:
  pull_request:
    paths:
    - '.github/docker_ubuntu_bionic/DockerFile'
    - '.github/workflows/dockerimage.yml'

  schedule:
    - cron: '0 2 * * TUE'

jobs:

  create-docker-ubuntu:
    strategy:
      fail-fast: false
      matrix:
        salome-version: [9-3, 9-4, 9-5]

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1

    - name: Build the Docker image for salome version ${{ matrix.salome-version }}
      run: |
        if [ ${{ matrix.salome-version }} == 9-3 ]; then
          SALOME_DOWNLOAD_PATH="https://www.salome-platform.org/downloads/previous-versions/salome-v9.3/DownloadDistr?platform=OS1.UB18.04&version=9.3.0"
        elif [ ${{ matrix.salome-version }} == 9-4 ]; then
          SALOME_DOWNLOAD_PATH="https://www.salome-platform.org/downloads/previous-versions/salome-v9.4/DownloadDistr?platform=SP.UB18.04&version=9.4.0"
        elif [ ${{ matrix.salome-version }} == 9-5 ]; then
          SALOME_DOWNLOAD_PATH="https://www.salome-platform.org/downloads/current-version/DownloadDistr?platform=SP.UB18.04&version=9.5.0"
        else
          echo 'No "SALOME_DOWNLOAD_PATH" configured for version ${{ matrix.salome-version }}'
          exit 1
        fi

        # output configuration
        echo "SALOME_DOWNLOAD_PATH:" ${SALOME_DOWNLOAD_PATH}

        docker build . --file .github/docker_ubuntu_bionic/DockerFile \
          --tag philbucher/ubuntu-18-04-salome-${{ matrix.salome-version }} \
          --build-arg salome_download_path=${SALOME_DOWNLOAD_PATH}

    - name: Docker Login
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Publish the Docker image for salome version ${{ matrix.salome-version }}
      run: docker push philbucher/ubuntu-18-04-salome-${{ matrix.salome-version }}

  # TODO maybe in the future a better solution can be found for the execution of the tests after the docker is rebuilt
  # right now quite some copy paste is necessary

  testing-in-salome:
    needs: create-docker-ubuntu
    strategy:
      fail-fast: false
      matrix:
        salome-version: [9-3, 9-4, 9-5]

    runs-on: ubuntu-18.04

    container:
      image: philbucher/ubuntu-18-04-salome-${{ matrix.salome-version }}:latest

    steps:
    - uses: actions/checkout@v1

    - name: Running tests in salome version ${{ matrix.salome-version }}
      # "--shutdown-servers=1" is not used bcs container is shut down right after
      env:
        PYQT_AVAILABLE: 1
        QT_QPA_PLATFORM: offscreen
        LANG: C.UTF-8 # see https://stackoverflow.com/a/51302441
      run: |
        cd tests
        python3 ../execute_in_salome.py /root/salome_dir/salome run_all_tests.py


  check-salome-execution-detection:
    # TODO this should also check if the version-fct returns correct results
    needs: create-docker-ubuntu
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        salome-version: [9-3, 9-4, 9-5]

    runs-on: ubuntu-18.04

    container:
      image: philbucher/ubuntu-18-04-salome-${{ matrix.salome-version }}:latest

    steps:
    - uses: actions/checkout@v1

    - name: assert run in salome
      # given as string bcs some keywords are also recognized by yaml
      # "--shutdown-servers=1" is not used bcs container is shut down right after
      run: "/root/salome_dir/salome -t .github/assert_run_in_salome.py args:1"
